# Indent lines with tabs instead of spaces.
useTabs: false

# Specify the length of line that the printer will wrap on.

tabWidth: 4

# Use semicolons on every line 
semi: true  # Semicolons

# Use single quotes instead of double quotes
singleQuote: true

# Line wrap length
printWidth: 120

# Print trailing commas wherever possible.
# Valid options:
#     "none" - no trailing commas
#     "es5" - trailing commas where valid in ES5 (objects, arrays, etc)
#     "all" - trailing commas wherever possible (function arguments)
trailingComma: all

# Print spaces between brackets in object literals.
bracketSpacing: true

# Put the > of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).
bracketSameLine: false

# Include parentheses around a sole arrow function parameter.
# Valid options:
#     "always" - Always include parens. Example: (x) => x
#     "avoid" - Omit parens when possible. Example: x => x
arrowParens: always


# By default, Prettier will not change wrapping in markdown text since some services use a linebreak-sensitive renderer, e.g. GitHub comments and BitBucket. To have Prettier wrap prose to the print width, change this option to "always". If you want Prettier to force all prose blocks to be on a single line and rely on editor/viewer soft wrapping instead, you can use "never".
# Valid options:
#     "always" - Wrap prose if it exceeds the print width.
#     "never" - Un-wrap each block of prose into one line.
#     "preserve" - Do nothing, leave prose as-is. First available in v1.9.0
proseWrap: always

# Whether or not to indent the code inside <script> and <style> tags in Vue files.
vueIndentScriptAndStyle: false
